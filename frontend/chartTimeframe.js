// Chart Timeframe Manager
// –ú–æ–¥—É–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞–º–∏ –∏ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö

class ChartTimeframeManager {
    constructor() {
        // –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∞–π–º—Ñ—Ä–µ–π–º—ã —Å –∏—Ö –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        this.timeframes = {
            'S5': 5,       // 5 —Å–µ–∫—É–Ω–¥
            'S10': 10,     // 10 —Å–µ–∫—É–Ω–¥
            'S15': 15,     // 15 —Å–µ–∫—É–Ω–¥
            'S30': 30,     // 30 —Å–µ–∫—É–Ω–¥
            'M1': 60,      // 1 –º–∏–Ω—É—Ç–∞
            'M2': 120,     // 2 –º–∏–Ω—É—Ç—ã
            'M3': 180,     // 3 –º–∏–Ω—É—Ç—ã
            'M5': 300,     // 5 –º–∏–Ω—É—Ç
            'M10': 600,    // 10 –º–∏–Ω—É—Ç
            'M15': 900,    // 15 –º–∏–Ω—É—Ç
            'M30': 1800    // 30 –º–∏–Ω—É—Ç
        };
        
        // üéØ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –° –°–ï–†–í–ï–†–û–ú: –î–∞–Ω–Ω—ã–µ —Å –±—ç–∫–µ–Ω–¥–∞
        this.serverCandleStartTime = null; // –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Å–≤–µ—á–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞
        this.serverTimeframeSeconds = null; // –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞
        this.serverTimeDelta = 0; // —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –≤—Ä–µ–º–µ–Ω–µ–º —Å–µ—Ä–≤–µ—Ä–∞ –∏ –∫–ª–∏–µ–Ω—Ç–∞ (ms)
        
        // üéØ –£–ü–†–û–©–ï–ù–ù–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø: 100% accumulation –¥–ª—è –≤—Å–µ—Ö —Ç–∞–π–º—Ñ—Ä–µ–π–º–æ–≤
        // –£–±—Ä–∞–Ω–æ sliding window –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç–∏
        // –í—Å–µ —Ç–∞–π–º—Ñ—Ä–µ–π–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–∞–∫ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –±–∏—Ä–∂–µ–≤—ã–µ —Å–≤–µ—á–∏
        this.timeframeConfig = {
            'S5': { 
                accumulationPhase: 1.0,    // 100% - –≤—Å–µ–≥–¥–∞ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∂–∏–º
                fixedRangePercent: null,   // –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
                minRangePercent: 0.02      // –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω 0.02%
            },
            'S10': { 
                accumulationPhase: 1.0,    // 100% - –≤—Å–µ–≥–¥–∞ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∂–∏–º
                fixedRangePercent: null,
                minRangePercent: 0.02
            },
            'S15': { 
                accumulationPhase: 1.0,    // 100% - –≤—Å–µ–≥–¥–∞ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∂–∏–º
                fixedRangePercent: null,
                minRangePercent: 0.02
            },
            'S30': { 
                accumulationPhase: 1.0,    // 100% - –≤—Å–µ–≥–¥–∞ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∂–∏–º
                fixedRangePercent: null,
                minRangePercent: 0.025
            },
            'M1': { 
                accumulationPhase: 1.0,    // 100% - –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ –≤—Å–µ –≤—Ä–µ–º—è
                fixedRangePercent: null,   // –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
                minRangePercent: 0.025     // –º–∏–Ω–∏–º—É–º 0.025%
            },
            'M2': { 
                accumulationPhase: 1.0,    // 100% - –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ –≤—Å–µ –≤—Ä–µ–º—è
                fixedRangePercent: null,
                minRangePercent: 0.03
            },
            'M3': { 
                accumulationPhase: 1.0,    // 100% - –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ –≤—Å–µ –≤—Ä–µ–º—è
                fixedRangePercent: null,
                minRangePercent: 0.035
            },
            'M5': { 
                accumulationPhase: 1.0,    // 100% - –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ –≤—Å–µ –≤—Ä–µ–º—è
                fixedRangePercent: null,
                minRangePercent: 0.04
            },
            'M10': { 
                accumulationPhase: 1.0,    // 100% - –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ –≤—Å–µ –≤—Ä–µ–º—è
                fixedRangePercent: null,
                minRangePercent: 0.05
            },
            'M15': { 
                accumulationPhase: 1.0,    // 100% - –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ –≤—Å–µ –≤—Ä–µ–º—è
                fixedRangePercent: null,
                minRangePercent: 0.06
            },
            'M30': { 
                accumulationPhase: 1.0,    // 100% - –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ –≤—Å–µ –≤—Ä–µ–º—è
                fixedRangePercent: null,
                minRangePercent: 0.08
            }
        };
        
        this.currentTimeframe = 'S5'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 5 —Å–µ–∫—É–Ω–¥
        this.expirationTimer = null;
        this.onExpirationUpdate = null; // Callback –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI —Ç–∞–π–º–µ—Ä–∞
        
        // üéØ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ñ–∞–∑—ã —Å–≤–µ—á–∏ –¥–ª—è —Å–∫–æ–ª—å–∑—è—â–µ–≥–æ –æ–∫–Ω–∞
        this.candlePhaseData = new Map(); // time -> { fixedRange, phase }
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
     */
    getTimeframeDuration(timeframe) {
        return this.timeframes[timeframe] || this.timeframes['S5'];
    }
    
    /**
     * –í—ã—á–∏—Å–ª–∏—Ç—å –Ω–∞—á–∞–ª–æ —Ç–µ–∫—É—â–µ–π —Å–≤–µ—á–∏ –ø–æ –≥–ª–æ–±–∞–ª—å–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏
     * –≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç —á—Ç–æ —Å–≤–µ—á–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –º–æ–º–µ–Ω—Ç–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
     * 
     * –ù–∞–ø—Ä–∏–º–µ—Ä:
     * - –î–ª—è M30 (30 –º–∏–Ω—É—Ç): —Å–≤–µ—á–∏ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è –≤ :00 –∏ :30 –∫–∞–∂–¥–æ–≥–æ —á–∞—Å–∞
     * - –î–ª—è M10 (10 –º–∏–Ω—É—Ç): —Å–≤–µ—á–∏ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è –≤ :00, :10, :20, :30, :40, :50 –∫–∞–∂–¥–æ–≥–æ —á–∞—Å–∞
     * - –î–ª—è S5 (5 —Å–µ–∫—É–Ω–¥): —Å–≤–µ—á–∏ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥ –æ—Ç –Ω–∞—á–∞–ª–∞ –º–∏–Ω—É—Ç—ã
     */
    getCandleStartTime(timestamp, timeframe) {
        const duration = this.getTimeframeDuration(timeframe);
        
        // –û–∫—Ä—É–≥–ª—è–µ–º timestamp –≤–Ω–∏–∑ –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ –Ω–∞—á–∞–ª–∞ —Å–≤–µ—á–∏
        return Math.floor(timestamp / duration) * duration;
    }
    
    /**
     * –í—ã—á–∏—Å–ª–∏—Ç—å –≤—Ä–µ–º—è –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–µ–∫—É—â–µ–π —Å–≤–µ—á–∏
     */
    getCandleEndTime(timestamp, timeframe) {
        const startTime = this.getCandleStartTime(timestamp, timeframe);
        const duration = this.getTimeframeDuration(timeframe);
        return startTime + duration;
    }
    
    /**
     * üéØ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Å —É—á–µ—Ç–æ–º –¥–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–∞
     */
    getCurrentServerTime() {
        // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º - –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë
        if (this.serverCandleStartTime !== null && this.serverTimeframeSeconds !== null) {
            const clientNow = Date.now();
            const serverNow = clientNow + this.serverTimeDelta;
            return Math.floor(serverNow / 1000);
        }
        
        // –ò–Ω–∞—á–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è
        return Math.floor(Date.now() / 1000);
    }
    
    /**
     * üéØ –ù–û–í–û–ï: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏ —Å–µ—Ä–≤–µ—Ä–∞
     */
    syncWithServer(candleStartTime, timeframeSeconds, serverTime) {
        this.serverCandleStartTime = candleStartTime;
        this.serverTimeframeSeconds = timeframeSeconds;
        
        // –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–Ω–∏—Ü—É –≤—Ä–µ–º–µ–Ω–∏ –∫–ª–∏–µ–Ω—Ç-—Å–µ—Ä–≤–µ—Ä
        const clientTime = Math.floor(Date.now() / 1000);
        this.serverTimeDelta = (serverTime - clientTime) * 1000; // –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
        
        window.errorLogger?.info('timeframe', '‚úÖ Timer synced with server', {
            candleStartTime: candleStartTime,
            timeframeSeconds: timeframeSeconds,
            serverTime: serverTime,
            clientTime: clientTime,
            timeDelta: this.serverTimeDelta + 'ms'
        });
        
        console.log(`üïê Timer synced: candle starts at ${candleStartTime}, duration ${timeframeSeconds}s, delta ${this.serverTimeDelta}ms`);
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –≤—Ä–µ–º—è –¥–æ –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–µ–∫—É—â–µ–π —Å–≤–µ—á–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
     */
    getTimeUntilCandleClose(timeframe = this.currentTimeframe) {
        // üéØ –ö–†–ò–¢–ò–ß–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º
        if (this.serverCandleStartTime !== null && this.serverTimeframeSeconds !== null) {
            const now = this.getCurrentServerTime();
            const candleEndTime = this.serverCandleStartTime + this.serverTimeframeSeconds;
            const remaining = candleEndTime - now;
            
            // –ó–∞—â–∏—Ç–∞ –æ—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π (—Å–≤–µ—á–∞ —É–∂–µ –∑–∞–∫—Ä—ã–ª–∞—Å—å, –∂–¥–µ–º –Ω–æ–≤—É—é)
            if (remaining < 0) {
                // –í—ã—á–∏—Å–ª—è–µ–º –Ω–∞—á–∞–ª–æ —Å–ª–µ–¥—É—é—â–µ–π —Å–≤–µ—á–∏
                const nextCandleStart = Math.ceil(now / this.serverTimeframeSeconds) * this.serverTimeframeSeconds;
                const nextCandleEnd = nextCandleStart + this.serverTimeframeSeconds;
                return Math.max(0, nextCandleEnd - now);
            }
            
            return Math.max(0, remaining);
        }
        
        // Fallback –∫ —Å—Ç–∞—Ä–æ–º—É –º–µ—Ç–æ–¥—É –µ—Å–ª–∏ –Ω–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        const now = Math.floor(Date.now() / 1000);
        const endTime = this.getCandleEndTime(now, timeframe);
        return endTime - now;
    }
    
    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è (MM:SS)
     */
    formatExpirationTime(seconds) {
        const minutes = Math.floor(seconds / 60);
        const secs = seconds % 60;
        return `${String(minutes).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å —á–∏—Ç–∞–±–µ–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞
     */
    getTimeframeLabel(timeframe) {
        const labels = {
            'S5': 'S5 (5 sec)',
            'S10': 'S10 (10 sec)',
            'S15': 'S15 (15 sec)',
            'S30': 'S30 (30 sec)',
            'M1': 'M1 (1 min)',
            'M2': 'M2 (2 min)',
            'M3': 'M3 (3 min)',
            'M5': 'M5 (5 min)',
            'M10': 'M10 (10 min)',
            'M15': 'M15 (15 min)',
            'M30': 'M30 (30 min)'
        };
        return labels[timeframe] || timeframe;
    }
    
    /**
     * –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Å–≤–µ—á–∏ –ø–æ —Ç–∞–π–º—Ñ—Ä–µ–π–º—É
     * –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Ç–∏–∫–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å–≤–µ—á–µ–π
     */
    groupDataByTimeframe(ticks, timeframe) {
        if (!ticks || ticks.length === 0) return [];
        
        const duration = this.getTimeframeDuration(timeframe);
        const candles = {};
        
        // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Ç–∏–∫–∏ –ø–æ —Å–≤–µ—á–∞–º
        ticks.forEach(tick => {
            const candleStart = this.getCandleStartTime(tick.time, timeframe);
            
            if (!candles[candleStart]) {
                // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–≤–µ—á—É
                candles[candleStart] = {
                    time: candleStart,
                    open: tick.price,
                    high: tick.price,
                    low: tick.price,
                    close: tick.price,
                    volume: tick.volume || 0
                };
            } else {
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å–≤–µ—á—É
                const candle = candles[candleStart];
                candle.high = Math.max(candle.high, tick.price);
                candle.low = Math.min(candle.low, tick.price);
                candle.close = tick.price;
                candle.volume += tick.volume || 0;
            }
        });
        
        // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç –≤ –º–∞—Å—Å–∏–≤ –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏
        return Object.values(candles).sort((a, b) => a.time - b.time);
    }
    
    /**
     * üéØ –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–µ–∫—É—â—É—é —Ñ–∞–∑—É —Å–≤–µ—á–∏ (–Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ –∏–ª–∏ —Å–∫–æ–ª—å–∑—è—â–µ–µ –æ–∫–Ω–æ)
     */
    getCandlePhase(tickTime, candleStart, timeframe) {
        const config = this.timeframeConfig[timeframe];
        if (!config || config.accumulationPhase === 1.0) {
            return { phase: 'accumulation', progress: 0 };
        }
        
        const duration = this.getTimeframeDuration(timeframe);
        const elapsed = tickTime - candleStart;
        const progress = elapsed / duration;
        
        if (progress <= config.accumulationPhase) {
            return { phase: 'accumulation', progress };
        } else {
            return { phase: 'sliding', progress };
        }
    }
    
    /**
     * üéØ –ü–æ–ª—É—á–∏—Ç—å –±–∞–∑–æ–≤—É—é —Ü–µ–Ω—É –∞–∫—Ç–∏–≤–∞ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞
     * –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ä–µ–¥–Ω—é—é —Ü–µ–Ω—É –æ—Ç–∫—Ä—ã—Ç–∏—è/–∑–∞–∫—Ä—ã—Ç–∏—è –∫–∞–∫ –±–∞–∑—É
     */
    getBasePrice(candle) {
        return (candle.open + candle.close) / 2;
    }
    
    /**
     * –û–±–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é —Å–≤–µ—á—É —Å –Ω–æ–≤—ã–º —Ç–∏–∫–æ–º
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç { candle, isNewCandle }
     * 
     * üéØ –£–ü–†–û–©–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê: 100% accumulation
     * - high/low —Ä–∞—Å—Ç—É—Ç –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –∫–∞–∫ –≤ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏—Ö –±–∏—Ä–∂–µ–≤—ã—Ö —Å–≤–µ—á–∞—Ö
     * - –ù–µ—Ç –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ sliding window - –±–æ–ª–µ–µ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ
     */
    updateCandleWithTick(currentCandle, tick, timeframe) {
        const tickTime = tick.time;
        const candleStart = this.getCandleStartTime(tickTime, timeframe);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –ª–∏ —Ç–∏–∫ –∫ —Ç–µ–∫—É—â–µ–π —Å–≤–µ—á–µ –∏–ª–∏ —ç—Ç–æ –Ω–æ–≤–∞—è —Å–≤–µ—á–∞
        const isNewCandle = !currentCandle || currentCandle.time !== candleStart;
        
        if (isNewCandle) {
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–≤–µ—á—É
            const newCandle = {
                time: candleStart,
                open: tick.price,
                high: tick.price,
                low: tick.price,
                close: tick.price,
                volume: tick.volume || 0
            };
            
            window.errorLogger?.info('timeframe', 'üÜï New candle created', {
                timeframe,
                candleStart,
                tickTime,
                price: tick.price
            });
            
            return {
                candle: newCandle,
                isNewCandle: true
            };
        } else {
            // üìà –û–ë–ù–û–í–õ–ï–ù–ò–ï –¢–ï–ö–£–©–ï–ô –°–í–ï–ß–ò: –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –ª–æ–≥–∏–∫–∞
            // high/low —Ä–∞—Å—Ç—É—Ç –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –æ–±—Ä–∞–∑–æ–º
            const newHigh = Math.max(currentCandle.high, tick.price);
            const newLow = Math.min(currentCandle.low, tick.price);
            
            window.errorLogger?.debug('timeframe', 'üìä Candle updated', {
                timeframe,
                candleTime: currentCandle.time,
                tickTime: tickTime,
                close: tick.price.toFixed(6),
                high: newHigh.toFixed(6),
                low: newLow.toFixed(6),
                range: ((newHigh - newLow) / this.getBasePrice(currentCandle) * 100).toFixed(3) + '%'
            });
            
            return {
                candle: {
                    time: currentCandle.time,
                    open: currentCandle.open,
                    high: newHigh,
                    low: newLow,
                    close: tick.price,
                    volume: currentCandle.volume + (tick.volume || 0)
                },
                isNewCandle: false
            };
        }
    }
    
    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∞–π–º—Ñ—Ä–µ–π–º –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–∞–π–º–µ—Ä —ç–∫—Å–ø–∏—Ä–∞—Ü–∏–∏
     */
    setTimeframe(timeframe, onUpdate) {
        this.currentTimeframe = timeframe;
        this.onExpirationUpdate = onUpdate;
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä
        if (this.expirationTimer) {
            clearInterval(this.expirationTimer);
        }
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π —Ç–∞–π–º–µ—Ä (–æ–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É)
        this.expirationTimer = setInterval(() => {
            const timeLeft = this.getTimeUntilCandleClose(timeframe);
            const formatted = this.formatExpirationTime(timeLeft);
            
            if (this.onExpirationUpdate) {
                this.onExpirationUpdate(formatted, timeLeft, timeframe);
            }
        }, 1000);
        
        // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        const timeLeft = this.getTimeUntilCandleClose(timeframe);
        const formatted = this.formatExpirationTime(timeLeft);
        if (this.onExpirationUpdate) {
            this.onExpirationUpdate(formatted, timeLeft, timeframe);
        }
    }
    
    /**
     * –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∞–π–º–µ—Ä —ç–∫—Å–ø–∏—Ä–∞—Ü–∏–∏
     */
    stopExpirationTimer() {
        if (this.expirationTimer) {
            clearInterval(this.expirationTimer);
            this.expirationTimer = null;
        }
    }
    
    /**
     * –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
     */
    destroy() {
        this.stopExpirationTimer();
        this.onExpirationUpdate = null;
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Ç–∞–π–º—Ñ—Ä–µ–π–º–æ–≤
window.chartTimeframeManager = new ChartTimeframeManager();

console.log('üìÖ Chart Timeframe Manager initialized');
